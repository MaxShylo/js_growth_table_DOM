{"version":3,"sources":["scripts/main.js"],"names":["container","document","querySelector","table","rows","initialRows","initialColumns","maxCount","minCount","appendRowButton","removeRowButton","appendColumnButton","removeColumnButton","addEventListener","e","button","target","closest","classList","append","length","cloneNode","disabled","remove","forEach","row","cells"],"mappings":";AAAA,aAcA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAZA,IAAMA,EAAYC,SAASC,cAAc,cACnCC,EAAQH,EAAUE,cAAc,UAChCE,EAAOD,EAAMC,KACfC,EAAc,EACdC,EAAiB,EACfC,EAAW,GACXC,EAAW,EACXC,EAAkBT,EAAUE,cAAc,eAC1CQ,EAAkBV,EAAUE,cAAc,eAC1CS,EAAqBX,EAAUE,cAAc,kBAC7CU,EAAqBZ,EAAUE,cAAc,kBAEnDF,EAAUa,iBAAiB,QAAS,SAACC,GAC7BC,IAAAA,EAASD,EAAEE,OAAOC,QAAQ,WAE5B,GAACF,EAIGA,OAAAA,EAAOG,UAAU,IAClB,IAAA,aACHf,EAAMgB,OAAOf,EAAKA,EAAKgB,OAAS,GAAGC,WAAU,IAC7ChB,IACAK,EAAgBY,UAAW,EAEvBjB,IAAgBE,IAClBE,EAAgBa,UAAW,GAE7B,MAEG,IAAA,aACHlB,EAAKA,EAAKgB,OAAS,GAAGG,SACtBlB,IACAI,EAAgBa,UAAW,EAEvBjB,IAAgBG,IAClBE,EAAgBY,UAAW,GAE7B,MAEG,IAAA,gBACClB,EAAAA,GAAMoB,QAAQ,SAAAC,GAChBA,OAAAA,EAAIN,OAAOM,EAAIC,MAAMD,EAAIC,MAAMN,OAAS,GAAGC,WAAU,MAEvDf,IACAM,EAAmBU,UAAW,EAE1BhB,IAAmBC,IACrBI,EAAmBW,UAAW,GAEhC,MAEG,IAAA,gBACClB,EAAAA,GAAMoB,QAAQ,SAAAC,GAChBA,OAAAA,EAAIC,MAAMD,EAAIC,MAAMN,OAAS,GAAGG,WAElCjB,IACAK,EAAmBW,UAAW,EAE1BhB,IAAmBE,IACrBI,EAAmBU,UAAW","file":"main.eb1ce783.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst container = document.querySelector('.container');\nconst table = container.querySelector('.field');\nconst rows = table.rows;\nlet initialRows = 4;\nlet initialColumns = 4;\nconst maxCount = 10;\nconst minCount = 2;\nconst appendRowButton = container.querySelector('.append-row');\nconst removeRowButton = container.querySelector('.remove-row');\nconst appendColumnButton = container.querySelector('.append-column');\nconst removeColumnButton = container.querySelector('.remove-column');\n\ncontainer.addEventListener('click', (e) => {\n  const button = e.target.closest('.button');\n\n  if (!button) {\n    return;\n  }\n\n  switch (button.classList[0]) {\n    case 'append-row':\n      table.append(rows[rows.length - 1].cloneNode(true));\n      initialRows++;\n      removeRowButton.disabled = false;\n\n      if (initialRows === maxCount) {\n        appendRowButton.disabled = true;\n      }\n      break;\n\n    case 'remove-row':\n      rows[rows.length - 1].remove();\n      initialRows--;\n      appendRowButton.disabled = false;\n\n      if (initialRows === minCount) {\n        removeRowButton.disabled = true;\n      }\n      break;\n\n    case 'append-column':\n      [...rows].forEach(row =>\n        row.append(row.cells[row.cells.length - 1].cloneNode(true)));\n\n      initialColumns++;\n      removeColumnButton.disabled = false;\n\n      if (initialColumns === maxCount) {\n        appendColumnButton.disabled = true;\n      }\n      break;\n\n    case 'remove-column':\n      [...rows].forEach(row =>\n        row.cells[row.cells.length - 1].remove());\n\n      initialColumns--;\n      appendColumnButton.disabled = false;\n\n      if (initialColumns === minCount) {\n        removeColumnButton.disabled = true;\n      }\n      break;\n  }\n});\n"]}